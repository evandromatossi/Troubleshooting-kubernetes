apiVersion: v1
kind: Namespace
metadata:
  name: jenkins
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: jenkins
  name: jenkins
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  serviceName: jenkins
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - name: jenkins
        #image: jenkins/jenkins:2.100
        #image: jenkins
        image: jenkins/jenkins:2.239
        #image: gcr.io/brasil-k8s-cluster-infra/cicd/jenkins
        ports:
        - containerPort: 8080
          name: http-port
          protocol: TCP
        - containerPort: 50000
          name: jnlp-port
          protocol: TCP
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-disk
        - mountPath: /var/lib/docker/
          name: dockerconfig
      securityContext:
        fsGroup: 1000
        runAsUser: 0
        #serviceAccount: jenkins
        #serviceAccountName: jenkins
      volumes:
      # - hostPath:
      #     path: /var/run/docker.sock
      #     type: ""
      #   name: dockersock
      - hostPath:
          path: /var/lib/docker/
          type: ""
        name: dockerconfig
      - gcePersistentDisk:
          fsType: ext4
          pdName: jenkins-dados
        name: jenkins-disk
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: jenkins
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: http-jnlp
    port: 50000
    protocol: TCP
    targetPort: 50000
  selector:
    app: jenkins
  type: LoadBalancer
